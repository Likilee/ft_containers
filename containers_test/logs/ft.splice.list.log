size: 4
max_size: 768614336404564650

Content is:
- 1
- 2
- 3
- 4
###############################################
size: 3
max_size: 768614336404564650

Content is:
- 10
- 20
- 30
###############################################
foo::operator=(foo) CALLED
	-- BEGIN SPLICE [0] --
size: 8
max_size: 768614336404564650

Content is:
- 42
- 10
- 20
- 30
- 0
- 2
- 3
- 4
###############################################
size: 0
max_size: 768614336404564650

Content is:
- 2
- 3
- 4
- 0
- 42
- 10
- 20
- 30
###############################################
	-- BEGIN SPLICE [1] --
AddressSanitizer:DEADLYSIGNAL
=================================================================
==13305==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x00010f6afe95 bp 0x7ffee0554fb0 sp 0x7ffee0554f30 T0)
==13305==The signal is caused by a WRITE memory access.
==13305==Hint: address points to the zero page.
    #0 0x10f6afe95 in ft::list<foo<int>, std::__1::allocator<foo<int> > >::add_node(ft::bidirection_iter<foo<int>, foo<int>*, foo<int>&, ft::list_node<foo<int> >*, ft::bidirectional_iterator_tag, long>, ft::bidirection_iter<foo<int>, foo<int>*, foo<int>&, ft::list_node<foo<int> >*, ft::bidirectional_iterator_tag, long>) list.hpp:64
    #1 0x10f6b3ecc in ft::list<foo<int>, std::__1::allocator<foo<int> > >::splice(ft::bidirection_iter<foo<int>, foo<int>*, foo<int>&, ft::list_node<foo<int> >*, ft::bidirectional_iterator_tag, long>, ft::list<foo<int>, std::__1::allocator<foo<int> > >&, ft::bidirection_iter<foo<int>, foo<int>*, foo<int>&, ft::list_node<foo<int> >*, ft::bidirectional_iterator_tag, long>) list.hpp:368
    #2 0x10f6adb4e in void ft_splice<ft::bidirection_iter<foo<int>, foo<int>*, foo<int>&, ft::list_node<foo<int> >*, ft::bidirectional_iterator_tag, long>, ft::list<foo<int>, std::__1::allocator<foo<int> > > >(ft::list<foo<int>, std::__1::allocator<foo<int> > >&, ft::bidirection_iter<foo<int>, foo<int>*, foo<int>&, ft::list_node<foo<int> >*, ft::bidirectional_iterator_tag, long>, ft::list<foo<int>, std::__1::allocator<foo<int> > >&, ft::bidirection_iter<foo<int>, foo<int>*, foo<int>&, ft::list_node<foo<int> >*, ft::bidirectional_iterator_tag, long>) splice.cpp:21
    #3 0x10f6ac391 in main splice.cpp:62
    #4 0x7fff67aafcc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

==13305==Register values:
rax = 0x0000000000000010  rbx = 0x00007ffee0555040  rcx = 0x0000603000001780  rdx = 0x0000100000000002  
rdi = 0x00007ffee0555020  rsi = 0x0000100000000000  rbp = 0x00007ffee0554fb0  rsp = 0x00007ffee0554f30  
 r8 = 0x00007ffee05552e0   r9 = 0x00007ffee0555280  r10 = 0x00007ffee0555160  r11 = 0x00007fff8e33ebf0  
r12 = 0x00007ffee05553c0  r13 = 0x00007ffee05553e0  r14 = 0x00007ffee0555380  r15 = 0x00007ffee05553a0  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV list.hpp:64 in ft::list<foo<int>, std::__1::allocator<foo<int> > >::add_node(ft::bidirection_iter<foo<int>, foo<int>*, foo<int>&, ft::list_node<foo<int> >*, ft::bidirectional_iterator_tag, long>, ft::bidirection_iter<foo<int>, foo<int>*, foo<int>&, ft::list_node<foo<int> >*, ft::bidirectional_iterator_tag, long>)
==13305==ABORTING
